<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="57" total="84" passed="27" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-13T13:42:16 IST" name="Example Test Suite" finished-at="2023-04-13T13:42:16 IST" duration-ms="152">
    <groups>
      <group name="acceptance">
        <method signature="ExampleTests.acceptanceTest()[pri:0, instance:ExampleTests@176b75f7, instance params:[]]" name="acceptanceTest" class="ExampleTests"/>
        <method signature="ExampleTests.acceptanceTest()[pri:0, instance:ExampleTests@409c54f, instance params:[]]" name="acceptanceTest" class="ExampleTests"/>
        <method signature="ExampleTests.acceptanceTest()[pri:0, instance:ExampleTests@5965be2d, instance params:[]]" name="acceptanceTest" class="ExampleTests"/>
        <method signature="ExampleTests.acceptanceTest()[pri:0, instance:ExampleTests@3eb77ea8, instance params:[]]" name="acceptanceTest" class="ExampleTests"/>
        <method signature="ExampleTests.acceptanceTest()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" name="acceptanceTest" class="ExampleTests"/>
        <method signature="ExampleTests.acceptanceTest()[pri:0, instance:ExampleTests@7d286fb6, instance params:[]]" name="acceptanceTest" class="ExampleTests"/>
      </group> <!-- acceptance -->
      <group name="regression">
        <method signature="ExampleTests.regressionTest()[pri:0, instance:ExampleTests@282cb7c7, instance params:[]]" name="regressionTest" class="ExampleTests"/>
        <method signature="ExampleTests.regressionTest()[pri:0, instance:ExampleTests@5a9f4771, instance params:[]]" name="regressionTest" class="ExampleTests"/>
        <method signature="ExampleTests.regressionTest()[pri:0, instance:ExampleTests@7d898981, instance params:[]]" name="regressionTest" class="ExampleTests"/>
        <method signature="ExampleTests.regressionTest()[pri:0, instance:ExampleTests@3eb77ea8, instance params:[]]" name="regressionTest" class="ExampleTests"/>
        <method signature="ExampleTests.regressionTest()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" name="regressionTest" class="ExampleTests"/>
        <method signature="ExampleTests.regressionTest()[pri:0, instance:ExampleTests@7d286fb6, instance params:[]]" name="regressionTest" class="ExampleTests"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="ExampleTests.smokeTest()[pri:0, instance:ExampleTests@4f74980d, instance params:[]]" name="smokeTest" class="ExampleTests"/>
        <method signature="ExampleTests.smokeTest()[pri:0, instance:ExampleTests@518caac3, instance params:[]]" name="smokeTest" class="ExampleTests"/>
        <method signature="ExampleTests.smokeTest()[pri:0, instance:ExampleTests@68034211, instance params:[]]" name="smokeTest" class="ExampleTests"/>
        <method signature="ExampleTests.smokeTest()[pri:0, instance:ExampleTests@3eb77ea8, instance params:[]]" name="smokeTest" class="ExampleTests"/>
        <method signature="ExampleTests.smokeTest()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" name="smokeTest" class="ExampleTests"/>
        <method signature="ExampleTests.smokeTest()[pri:0, instance:ExampleTests@7d286fb6, instance params:[]]" name="smokeTest" class="ExampleTests"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-04-13T13:42:16 IST" name="smokeTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="30">
      <class name="ExampleTests">
        <test-method signature="smokeTest()[pri:0, instance:ExampleTests@4f74980d, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="smokeTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTest -->
        <test-method signature="smokeTest()[pri:0, instance:ExampleTests@518caac3, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="smokeTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTest -->
        <test-method signature="smokeTest()[pri:0, instance:ExampleTests@68034211, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="smokeTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTest -->
      </class> <!-- ExampleTests -->
    </test> <!-- smokeTest -->
    <test started-at="2023-04-13T13:42:16 IST" name="regressionTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="4">
      <class name="ExampleTests">
        <test-method signature="regressionTest()[pri:0, instance:ExampleTests@282cb7c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="regressionTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regressionTest -->
        <test-method signature="regressionTest()[pri:0, instance:ExampleTests@5a9f4771, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="regressionTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regressionTest -->
        <test-method signature="regressionTest()[pri:0, instance:ExampleTests@7d898981, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="regressionTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regressionTest -->
      </class> <!-- ExampleTests -->
    </test> <!-- regressionTest -->
    <test started-at="2023-04-13T13:42:16 IST" name="acceptanceTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="5">
      <class name="ExampleTests">
        <test-method signature="acceptanceTest()[pri:0, instance:ExampleTests@176b75f7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="acceptanceTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acceptanceTest -->
        <test-method signature="acceptanceTest()[pri:0, instance:ExampleTests@409c54f, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="acceptanceTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acceptanceTest -->
        <test-method signature="acceptanceTest()[pri:0, instance:ExampleTests@5965be2d, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="acceptanceTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acceptanceTest -->
      </class> <!-- ExampleTests -->
    </test> <!-- acceptanceTest -->
    <test started-at="2023-04-13T13:42:16 IST" name="parameterizedTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="62">
      <class name="ExampleTests">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeSuite" finished-at="2023-04-13T13:42:16 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:ExampleTests@3eb77ea8, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeClass" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="regressionTest()[pri:0, instance:ExampleTests@3eb77ea8, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="regressionTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regressionTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeClass" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="regressionTest()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="regressionTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regressionTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:ExampleTests@7d286fb6, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeClass" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="regressionTest()[pri:0, instance:ExampleTests@7d286fb6, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="regressionTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regressionTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="smokeTest()[pri:0, instance:ExampleTests@3eb77ea8, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="smokeTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="smokeTest()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="smokeTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="smokeTest()[pri:0, instance:ExampleTests@7d286fb6, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="smokeTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="acceptanceTest()[pri:0, instance:ExampleTests@3eb77ea8, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="acceptanceTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acceptanceTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="acceptanceTest()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="acceptanceTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acceptanceTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="acceptanceTest()[pri:0, instance:ExampleTests@7d286fb6, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="acceptanceTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acceptanceTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="exceptionTest()[pri:0, instance:ExampleTests@3eb77ea8, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="exceptionTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Exception Test]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Exception Test
at ExampleTests.exceptionTest(ExampleTests.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exceptionTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="exceptionTest()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="exceptionTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Exception Test]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Exception Test
at ExampleTests.exceptionTest(ExampleTests.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exceptionTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="exceptionTest()[pri:0, instance:ExampleTests@7d286fb6, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="exceptionTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Exception Test]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Exception Test
at ExampleTests.exceptionTest(ExampleTests.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exceptionTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="parameterizedTest(java.lang.String)[pri:0, instance:ExampleTests@3eb77ea8, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="parameterizedTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[value1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parameterizedTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="parameterizedTest(java.lang.String)[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="parameterizedTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[value1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parameterizedTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="parameterizedTest(java.lang.String)[pri:0, instance:ExampleTests@7d286fb6, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="parameterizedTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[value1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parameterizedTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="dependentTest()[pri:0, instance:ExampleTests@3eb77ea8, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="dependentTest" finished-at="2023-04-13T13:42:16 IST" depends-on-methods="ExampleTests.regressionTest, ExampleTests.smokeTest" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dependentTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterClass" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="dependentTest()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="dependentTest" finished-at="2023-04-13T13:42:16 IST" depends-on-methods="ExampleTests.regressionTest, ExampleTests.smokeTest" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dependentTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterClass" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="dependentTest()[pri:0, instance:ExampleTests@7d286fb6, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="dependentTest" finished-at="2023-04-13T13:42:16 IST" depends-on-methods="ExampleTests.regressionTest, ExampleTests.smokeTest" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dependentTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="beforeMethod" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterClass" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterTest" finished-at="2023-04-13T13:42:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:ExampleTests@7b8b43c7, instance params:[]]" started-at="2023-04-13T13:42:16 IST" name="afterSuite" finished-at="2023-04-13T13:42:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- ExampleTests -->
    </test> <!-- parameterizedTest -->
  </suite> <!-- Example Test Suite -->
</testng-results>
